// for testing / debugging dev purposes
describe("Failure cases", function() {
  it("fails when image data is not visually equal", async () => {
    let imgData = await fetchImageData("images/first.png");
    let changedData = await fetchImageData("images/second.png");
    expect(imgData).toVisuallyEqual(changedData);
  });

  it("explains when images are different sizes", async () => {
    let refData = await fetchImageData("images/first.png");
    let smallData = await fetchImageData("images/small.png");
    expect(refData).toVisuallyEqual(smallData);
  });

  it("fails when image data is not equal", async () => {
    let imgData = await fetchImageData("images/first.png");
    let changedData = await fetchImageData("images/second.png");
    expect(imgData).toEqual(changedData);
  });

  it("provides actual image when there is no expected image (for downloading)", async () => {
    let imgData = await fetchImageData("images/first.png");
    expect(imgData).toVisuallyEqual();
  });
});
